#version 330 core

// Vertex Data for the shader.

layout(location = 0) in vec3 vertexPosition_modelspace;
layout(location = 1) in vec3 vertexColor;
layout(location = 2) in vec3 vertexNormal_modelspace;
layout(location = 3) in vec2 vertexTexCoord;

// uniform values for the whole mesh (Constant throughout)
uniform mat4 lightDepthMVP;
out vec2 texCoord;

void main()
{
	gl_Position = lightDepthMVP * vec4(vertexPosition_modelspace, 1);

	// A simple pass through. The texCoord of each fragment will be interpolated from texCoord of each vertex
	texCoord = vertexTexCoord;
};
